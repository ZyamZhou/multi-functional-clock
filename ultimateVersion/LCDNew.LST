C51 COMPILER V9.00   LCDNEW                                                                07/07/2021 22:11:43 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCDNEW
OBJECT MODULE PLACED IN LCDNew.OBJ
COMPILER INVOKED BY: D:\ProgramDownload_3\Keil4\C51\BIN\C51.EXE LCDNew.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*变量定义*/
   2          #include <reg52.h>
   3          #include <intrins.h>
   4          
   5          #define uint unsigned int
   6          #define uchar unsigned char 
   7          #define LCD12864_DATAPORT P0 
   8          
   9          sbit LCD12864_RS=P2^2;  //选择命令
  10          sbit LCD12864_RW=P2^1;  //选择读取
  11          sbit LCD12864_EN=P2^0;  //使能
  12          sbit LCD12864_PSB=P1^7; //串并行口选择
  13          
  14          /*****************************延时1ms函数*************************************/
  15          void LCD12864_Delay1ms(uint n){
  16   1          unsigned int i=0,j=0;
  17   1          for(i=0;i<n;i++)
  18   1              for(j=0;j<123;j++);     
  19   1      }
  20          
  21          /*******************************************************************************
  22          * 函 数 名         : LCD12864_Busy
  23          * 函数功能       : 检测LCD是否忙
  24          * 输    入         : 无
  25          * 输    出         : 1或0（1表示不忙，0表示忙）
  26          *******************************************************************************/
  27          uchar LCD12864_Busy(void)
  28          {
  29   1        uchar i = 0;
  30   1        LCD12864_RS = 0;     //选择命令
  31   1        LCD12864_RW = 1;  //选择读取
  32   1        LCD12864_EN = 1;
  33   1        LCD12864_Delay1ms(1);
  34   1        while((LCD12864_DATAPORT & 0x80) == 0x80)  //检测读取到的值
  35   1        {
  36   2          i++;
  37   2          if(i > 100)
  38   2          {
  39   3            LCD12864_EN = 0;
  40   3            return 0;     //超过等待时间返回0表示失败
  41   3          }
  42   2        }
  43   1        LCD12864_EN = 0;
  44   1        return 1;
  45   1      }
  46          /*******************************************************************************
  47          * 函 数 名         : LCD12864_WriteCmd
  48          * 函数功能       : 写命令
  49          * 输    入         : cmd
  50          * 输    出         : 无
  51          *******************************************************************************/
  52          void LCD12864_WriteCmd(uchar cmd)
  53          {
  54   1        uchar i;
  55   1        i = 0;
C51 COMPILER V9.00   LCDNEW                                                                07/07/2021 22:11:43 PAGE 2   

  56   1        while( LCD12864_Busy() == 0)
  57   1        {
  58   2          LCD12864_Delay1ms(1);
  59   2          i++;
  60   2          if( i>100)
  61   2          {
  62   3            return;     //超过等待退出
  63   3          }  
  64   2        }  
  65   1        LCD12864_RS = 0;     //选择命令
  66   1        LCD12864_RW = 0;     //选择写入
  67   1        LCD12864_EN = 0;     //初始化使能端
  68   1        LCD12864_DATAPORT = cmd;   //放置数据
  69   1        LCD12864_EN = 1;       //写时序
  70   1        LCD12864_Delay1ms(5);
  71   1        LCD12864_EN = 0;              
  72   1      }
  73          
  74          /*******************************************************************************
  75          * 函 数 名         : LCD12864_WriteData
  76          * 函数功能       : 写数据
  77          * 输    入         : dat
  78          * 输    出         : 无
  79          *******************************************************************************/
  80          void LCD12864_WriteData(uchar dat)
  81          {
  82   1        uchar i;
  83   1        i = 0;
  84   1        while( LCD12864_Busy() == 0)
  85   1        {
  86   2          LCD12864_Delay1ms(1);
  87   2          i++;
  88   2          if( i>100)
  89   2          {
  90   3            return;     //超过等待退出
  91   3          }  
  92   2        }
  93   1        LCD12864_RS = 1;     //选择数据
  94   1        LCD12864_RW = 0;     //选择写入
  95   1        LCD12864_EN = 0;     //初始化使能端
  96   1        LCD12864_DATAPORT = dat;   //放置数据
  97   1        LCD12864_EN = 1;       //写时序
  98   1        LCD12864_Delay1ms(5);
  99   1        LCD12864_EN = 0;                    
 100   1      }
 101          
 102          /*******************************************************************************
 103          * 函 数 名         : LCD12864_Init
 104          * 函数功能       : 初始化LCD12864
 105          * 输    入         : 无
 106          * 输    出         : 无
 107          *******************************************************************************/
 108          void LCD12864_Init()
 109          {
 110   1              LCD12864_PSB = 1;           //选择并行输入
 111   1              LCD12864_WriteCmd(0x30);    //选择基本指令操作
 112   1              LCD12864_WriteCmd(0x06);        //地址自动加1
 113   1              LCD12864_WriteCmd(0x0c);    //显示开，关光标
 114   1              LCD12864_WriteCmd(0x01);    //清除LCD12864的显示内容
 115   1      }
 116          
 117          /*******************************************************************************
C51 COMPILER V9.00   LCDNEW                                                                07/07/2021 22:11:43 PAGE 3   

 118          * 函 数 名     :  LCDSetPos
 119          * 函数功能     : 设置在基本指令模式下设置显示坐标。注意：x是设置行，y是设置列
 120          * 输    入      : x(行), y（列）
 121          * 输    出      : 无
 122          *******************************************************************************/
 123          void LCDSetPos(uchar x, uchar y)  
 124          {
 125   1        uchar pos;
 126   1        uchar i=y;
 127   1        if(x == 0)        //第一行的地址是80H
 128   1          x = 0x80;   
 129   1        else if(x == 1)   //第二行的地址是90H
 130   1          x = 0x90;  
 131   1        else if(x == 2)   //第三行的地址是88H
 132   1          x = 0x88; 
 133   1        else if(x == 3)   //第四行的地址是98H
 134   1          x = 0x98;
 135   1        
 136   1        pos = x + y;
 137   1        LCD12864_WriteCmd(pos);
 138   1      }
 139          
 140          void DisplayWord(uchar *word){
 141   1              while(*word !='\0'){
 142   2              LCD12864_WriteData(*word);
 143   2              word++;         
 144   2              }               
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    252    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
